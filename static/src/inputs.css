input{
    width: 60%;
    margin: 7%;
    border-radius:2.5px;
    color: var(--text);
    background-color: var(--input-bg);
    transition: all .275s;
}
.lbl-t {
    color: var(--text);
    text-shadow: 0 0.04em 0.04em rgba(0,0,0,0.35);
}
output {
    width: max-content;
    padding: 0 3%;
    margin: 0 5% 7% 5%;
    background-color: var(--output-bg);
    border-radius:2.5px;
    color: var(--text);
    transition: all .275s;
}

.check {
    position: relative;
    left: 0%;
    margin-left: -2%;
}

input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  appearance: none; 
  margin: 0; 
}

/* Base for label styling */
.input_value [type="checkbox"]:not(:checked),
.input_value [type="checkbox"]:checked {
  position: absolute;
  left: 0;
  opacity: 0.01;
}
.input_value [type="checkbox"]:not(:checked) + label,
.input_value [type="checkbox"]:checked + label {
  position: relative;
  padding-right: 15%;
  font-size: 1.05em;
  line-height: 1.7;
  cursor: pointer;
  margin-left: 6%;
}

/* checkbox aspect */
.input_value [type="checkbox"]:not(:checked) + label:before,
.input_value [type="checkbox"]:checked + label:before {
  content: '';
  position: absolute;
  top: 50%;
  right: 0;
  margin-top: -0.7em;
  width: 1.4em;
  height: 1.4em;
  border: 1px solid #aaa;
  background: var(--input-bg);
  border-radius: .2em;
  box-shadow: inset 0 1px 3px rgba(0,0,0, .1), 0 0 0 rgba(203, 34, 237, .2);
  transition: all .275s;
}

/* checked mark aspect */
.input_value [type="checkbox"]:not(:checked) + label:after,
.input_value [type="checkbox"]:checked + label:after {
  content: 'âœ•';
  position: absolute;
  top: 50%;
  right: 1.5%;
  font-size: 1.375em;
  color: var(--text);
  line-height: 0;
  transition: all .2s;
}

/* checked mark aspect changes */
.input_value [type="checkbox"]:not(:checked) + label:after {
  opacity: 0;
  transform: scale(0) rotate(45deg);
}

.input_value [type="checkbox"]:checked + label:after {
  opacity: 1;
  transform: scale(1) rotate(0);
}

/* Disabled checkbox */
.input_value [type="checkbox"]:disabled:not(:checked) + label:before,
.input_value [type="checkbox"]:disabled:checked + label:before {
  box-shadow: none;
  border-color: #bbb;
  background-color: #e9e9e9;
}

.input_value [type="checkbox"]:disabled:checked + label:after {
  color: #777;
}

.input_value [type="checkbox"]:disabled + label {
  color: #aaa;
}

/* Accessibility */
.input_value [type="checkbox"]:checked:focus + label:before,
.input_value [type="checkbox"]:not(:checked):focus + label:before {
  box-shadow: inset 0 1px 3px rgba(0,0,0, .1), 0 0 0 6px rgba(203, 34, 237, .2);
}

  .wrapper{
    display: inline-flex;
    align-items: center;
    justify-content: space-evenly;
    border-radius: 5px;
    padding: 20px 15px;
  }

  .wrapper .option{
    background: var(--body-bg);
    height: 100%;
    width: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 10px;
    border-radius: 5px;
    cursor: pointer;
    padding: 3% 2% 3% 5%;
    border: 2px solid lightgrey;
    transition: all 0.3s ease;
    flex-direction: row;
  }

  .wrapper .option .dot{
    height: 20px;
    width: 20px;
    background: #d9d9d9;
    border-radius: 50%;
    position: relative;
    margin-left: -10%;
  }
  .wrapper .option .dot::before{
    position: absolute;
    content: "";
    top: 4px;
    left: 4px;
    width: 12px;
    height: 12px;
    background: #0069d9;
    border-radius: 50%;
    opacity: 0;
    transform: scale(1.5);
    transition: all 0.3s ease;
  }

  input[type="radio"]{
    display: none;
  }

  .wrapper .option span{
    font-size: 15px;
    color: #808080;
    margin-left: 5%;
  }

  #option-1:checked:checked ~ .option-1,
  #option-2:checked:checked ~ .option-2,
  #option-3:checked:checked ~ .option-3{
    background: var(--radio-bg);
  }
  #option-1:checked:checked ~ .option-1 .dot,
  #option-2:checked:checked ~ .option-2 .dot,
  #option-3:checked:checked ~ .option-3 .dot{
    background: #fff;
  }
  #option-1:checked:checked ~ .option-1 .dot::before,
  #option-2:checked:checked ~ .option-2 .dot::before,
  #option-3:checked:checked ~ .option-3 .dot::before{
    opacity: 1;
    transform: scale(1);
  }
  
  #option-1:checked:checked ~ .option-1 span,
  #option-2:checked:checked ~ .option-2 span,
  #option-3:checked:checked ~ .option-3 span{
    color: #fff;
  }

#option1-1:checked:checked ~ .option-1,
#option1-2:checked:checked ~ .option-2{
  background: var(--radio-bg);
}
#option1-1:checked:checked ~ .option-1 .dot,
#option1-2:checked:checked ~ .option-2 .dot{
  background: #fff;
}
#option1-1:checked:checked ~ .option-1 .dot::before,
#option1-2:checked:checked ~ .option-2 .dot::before{
  opacity: 1;
  transform: scale(1);
}

#option1-1:checked:checked ~ .option-1 span,
#option1-2:checked:checked ~ .option-2 span{
  color: #fff;
}

.dropdown {
    display: grid;
    position: relative;
    width: 100%;
    justify-items: center;
    align-items: center;
}

.dropbtn {
    position: relative;
    width: 80%;
    height: 70%;
    margin: 5%;
    padding:0.3em 1.2em;
    border:0.16em solid rgba(255,255,255,0);
    border-radius:2.5px;
    box-sizing: border-box;
    text-decoration:none;
    font-family:'Roboto',sans-serif;
    font-size: 17px;
    font-weight:300;
    color: var(--drop-text);
    text-shadow: 0 0.04em 0.04em rgba(0,0,0,0.35);
    text-align:center;
    transition: all 0.2s;
    background-color: var(--dropdown);
}

.dropbtn:hover {
    border-color: rgb(0, 0, 0);
}

.dropdown_input_value {
    display: none;
    overflow: auto;
    margin: 5%;
    width: 80%;
    align-items: center;
    flex-direction: row;
    justify-content: space-around;
    align-content: center;
    flex-wrap: nowrap;
    background-color: var(--input);
    animation: BGcolorInput 500ms linear 0.25s 1 alternate;
}

.show {
    display: inline-flex;
}

.showed {
    background-color: var(--drop-bg);
    border: 1px solid var(--bg-line);
    margin-top: 21px;
}
li label {
    position: relative;
    margin: 7%;
    width: 100%;
    display: flex;
}

li {
    position: relative;
    height: fit-content;
    width: 80%;
}

li.input_value {
    margin: 10px;
    padding: 10px 5px;
    float: right;
    display: inline-flex;
    align-items: center;
    flex-direction: row;
    justify-content: space-around;
    align-content: center;
    flex-wrap: nowrap;
    background-color: var(--input);
    animation: BGcolorInput 500ms linear 0.25s 1 alternate;
}

li.output_value {
    padding: 0 20px;
    float: right;
    display: none;
    align-items: center;
    flex-direction: column;
    justify-content: space-around;
    align-content: center;
    flex-wrap: nowrap;
}

.has_value{
    background-color: var(--output-value);
    animation: BGcolorHas_value 0.35s linear 0.15s alternate both;
}
.had_value{
    background-color: var(--output-value);
    animation: BGcolorHad_value 0.35s linear 0.15s alternate both;
}
.calculated {
    background-color: var(--output-caculated);
    animation: BGcolorCalculated 0.35s linear 0.15s alternate both;
}

.dropul {
    display: flex;
    align-items: center;
    flex-direction: column;
}

.wrong {
    background-color: var(--wrong);
    animation: BGcolorWrong 0.5s linear 0.25s alternate both;
}

.wrong2 {
    background-color: var(--wrong);
    animation: BGcolorWrong2 0.5s linear 0.25s alternate both;
}

@keyframes BGcolorCalculated {
    0% {
        background-color: var(--strong-animation);
    }
    50% {
        background-color: var(--light-animation);
    }
}

@keyframes BGcolorHas_value {
    0% {
        background-color: var(--strong-animation);
    }
    50% {
        background-color: var(--light-animation);
    }
}

@keyframes BGcolorHad_value {
    0% {
        background-color: var(--strong-animation);
    }
    50% {
        background-color: var(--light-animation);
    }
}

@keyframes BGcolorWrong {
    0% {
        background-color: var(--wrong-light);
    }
    50% {
        background-color: var(--wrong-strong);
    }
}

@keyframes BGcolorWrong2 {
    0% {
        background-color: var(--wrong-light);
    }
    50% {
        background-color: var(--wrong-strong);
    }
}

@keyframes BGcolorInput {
    0% {
        background-color: var(--input-strong);
    }
    50% {
        background-color: var(--input-light);
    }
}